#%%

# 1.第三方库
import numpy as np
import scipy.io as sio
import matplotlib.pyplot as plt
from sklearn.svm import SVC

#%%

# 2.导入数据
data=sio.loadmat('ex6data2.mat')
data.keys()

#%%

# 3.整理数据
x=data['X']
y=data['y']
x.shape,y.shape

#%%

# 4.绘制图像
def p_data():
    plt.scatter(x[:,0],x[:,1],c=y.flatten(),cmap='jet')
    plt.xlabel('x1')
    plt.xlabel('x2')

#%%

p_data()

#%%

# 5.用 scipy.io 实现高斯核函数
# C越大,越拟合
# gamma越小,模型复杂度越低,欠拟合,gamma越大,模型复杂度越高,过拟合
svc1=SVC(C=1,kernel='rbf',gamma=50)
svc1.fit(x,y.flatten())

#%%

# 5.1训练集得分
svc1.score(x,y.flatten())

#%%

# 6.当gamma=1时的图像
def p_boundary(model):
    x_min,x_max=0,1
    y_min,y_max=0.25,1.05
    xx,yy=np.meshgrid(np.linspace(x_min,x_max,500),np.linspace(y_min,y_max,500))
    z=model.predict(np.c_[xx.flatten(),yy.flatten()])
    zz=z.reshape(xx.shape)
    plt.contour(xx,yy,zz)

#%%

p_boundary(svc1)
p_data()

