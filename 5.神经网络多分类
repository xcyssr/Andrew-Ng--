import numpy as np
import matplotlib.pyplot as plt
import scipy.io as sio


data=sio.loadmat("ex3data1.mat")
x_=data['X']
y_=data['y']
x_.shape # 原始x_维度


# 升x维
x=np.insert(x_,0,values=1,axis=1)
# (需要增加的列,索引,值,方向)
# 在x上添加一列,即全为1的偏神经单元
x.shape


y_.shape


# 降y维
y=y_.flatten()
y.shape



t=sio.loadmat('ex3weights.mat')
t.keys() # 通过字典查看到两个key值,Theta1,Theta2



t1=t['Theta1']  # 输入层到隐藏层的theta
t2=t['Theta2']  # 隐藏层到输出层的theta
t1.shape,t2.shape



# 激活函数,此例选择s函数
def sigmoid(z):
    return 1/(1+np.exp(-z))



a1=x
z1=x@t1.T
a2=sigmoid(z1)
a2.shape



a2=np.insert(a2,0,values=1,axis=1)
a2.shape



z2=a2@t2.T
a3=sigmoid(z2)
a3.shape



f=np.argmax(a3,axis=1)
f=f+1



acc=np.mean(f==y)
acc
